ampl: 
ampl: 
ampl: solve;
Cannot find "minos"
ampl: reset;
ampl: reset;
ampl: reset;
ampl: reset;
ampl: 
ampl: model modelo1.mod;
ampl: data datos1.dat;

unexpected end of file
context:   >>> data datos1.dat <<< ;
ampl: option solver gurobi	;
ampl: option gurobi_options "outlev 1";
ampl: option log_file resultado.txt;		
ampl: solve;	
Gurobi 7.5.0: outlev 1
Optimize a model with 114 rows, 174 columns and 366 nonzeros
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [2e+01, 1e+02]
  Bounds range     [2e+03, 1e+04]
  RHS range        [2e+03, 2e+04]
Presolve removed 54 rows and 38 columns
Presolve time: 0.00s
Presolved: 60 rows, 136 columns, 248 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.6024430e+07   2.918925e+04   0.000000e+00      0s

Solved in 168 iterations and 0.00 seconds
Infeasible model
Gurobi 7.5.0: infeasible; constraint.dunbdd returned.
168 simplex iterations

suffix dunbdd OUT;
ampl: display Suma_Costos;				#Ejemplo de como mostrar el valor de la funci??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????n objetivo
Suma_Costos = 38925000

display x;
x [*] :=
 1     0    6     0   11  8500   16  8500   21     0   26  8500
 2     0    7     0   12  8500   17  8500   22  2000   27  6000
 3  8500    8     0   13  8000   18  8500   23 19500   28  6000
 4  8500    9     0   14     0   19  8500   24  8500   29  2000
 5  8500   10  8500   15     0   20  8000   25  8500   30     0
;

display y;
y [*] :=
 1     0    6  8000   11  5000   16  8500   21     0   26 13500
 2     0    7     0   12 12000   17  8500   22  2000   27  2000
 3  8500    8  2000   13  8000   18  5000   23 19500   28     0
 4  5000    9 10000   14     0   19 12000   24  8500   29     0
 5 12000   10  8500   15  3500   20  8000   25  3500   30     0
;

display z;
z [*] :=
 1  4500    6 12000   11  5000   16  2000   21  5000   26 15500
 2     0    7  5000   12 15500   17  3000   22  3000   27 12000
 3  3000    8  3000   13 12000   18  5500   23  2000   28  5000
 4  5500    9  2000   14  5000   19 15000   24  3000   29  3500
 5 15000   10  3000   15  3000   20 12000   25  5000   30  1500
;

display I_fab;
I_fab [*] :=
 1 2000    5 3500    9    0   13    0   17    0   21    0   25    0   29    0
 2 2000    6    0   10    0   14    0   18    0   22    0   26 5000   30 2000
 3    0    7    0   11    0   15    0   19 3500   23    0   27    0
 4    0    8    0   12 3500   16    0   20    0   24    0   28 4000
;

display I_may;
I_may [*] :=
 1  3000    6     0   11  7000   16     0   21     0   26 20000
 2 10000    7     0   12 10500   17  1500   22  3000   27  8000
 3 10000    8  3000   13     0   18  7000   23     0   28  9500
 4  7000    9     0   14     0   19 10000   24     0   29  6500
 5 10000   10     0   15  3000   20     0   25 16500   30  3000
;

display I_dist;							#Ejemplo de como mostrar el valor de una variable
